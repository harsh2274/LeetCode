/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* middleNode(ListNode* head) {
        int count = 1 ;
        ListNode* temp = head ;
        while(temp->next!=NULL){
            count ++ ;
            temp = temp -> next ;
        }
        int seti = count/2  ;
        cout << "seti: "<<seti << endl ;
        int count2 = 0 ;
        ListNode* temp2 = head ;
        while(temp2->next!=NULL){
            cout << temp2->val << endl ;
            if (count2>=seti){
                return(temp2) ;
            }
            temp2 = temp2 -> next ;
            count2 ++ ;
        }
        
        
        return(temp2) ;
    }
};