class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        
        vector<vector<int>> inter ;
        sort(intervals.begin(),intervals.end()) ;
        int start = intervals[0][0] ;
        int end = intervals[0][1] ;
        for (int i = 0 ; i<intervals.size() ; i++ ){
            cout << intervals[i][0] << "  " << intervals[i][1] << endl ; 
        }

        for (int i = 1 ; i < intervals.size() ; i++) {
            if (end<intervals[i][0]) {
                vector<int> temp = {start,end} ;
                inter.push_back(temp) ;
                start = intervals[i][0] ;
                end = intervals[i][1] ;
            }
            else {
                if (end<intervals[i][1]){
                    end = intervals[i][1] ;
                }
            }
        }
        vector<int> temp = {start,end} ;
        inter.push_back(temp) ;
        return(inter) ;
    }
};